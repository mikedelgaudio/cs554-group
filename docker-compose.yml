version: "3"
services:
  mongodb:
    platform: linux/amd64
    image: "mongo:4.4.1-bionic"
    # the port that we want to publish for mongodb
    ports:
      - "27017:27017"
    domainname: cs554
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 0.5GB
    # our mongodb depends on volume to keep the data alive.
    volumes:
      - db:/data/mongoaz
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "testing123"
    networks:
      - internal-proxy
    command: sh -c "mongod --dbpath=/data/mongoaz --bind_ip_all && cp -a /data/db/. /data/mongoaz/"
  redis:
    platform: linux/amd64
    image: "redis:7.0"
    domainname: cs554

    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 0.5GB
    networks:
      - internal-proxy
    ports:
      - "6379:6379"
  backend:
    platform: linux/amd64
    build:
      context: ./
      dockerfile: Dockerfile.backend
    domainname: cs554
    image: cs554acr.azurecr.io/backend
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 0.5GB
    depends_on:
      - redis
      - mongodb
    # env_file:
    #   - ./backend/.env
    networks:
      - external-proxy
      - internal-proxy
    ports:
      - "3001:3001"
    command: npm start
  frontend:
    platform: linux/amd64
    build:
      context: ./
      dockerfile: Dockerfile.frontend
    domainname: cs554
    image: cs554acr.azurecr.io/frontend
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 0.5GB
    depends_on:
      - backend
    # env_file:
    #   - ./frontend/.env
    ports:
      - "80:80"
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - external-proxy
networks:
  external-proxy:
    external: true
  internal-proxy:
    external: false
volumes:
  db:
    # driver: azure_file
    # driver_opts:
    #   share_name: cs554storageshare
    #   storage_account_name: cs554storage
